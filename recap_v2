/Users/dbratu/Documents/big_data/data-master/retail_db/orders

1.  Q: Three properties of HDFS?
    A: fs.defaultFS, dfs.blocksize, dfs.replication
2.  Q: Search for a specific pattern in linux cli
    A: ls -ltr|grep something
3.  Q: How to always run Spark version 2?
    A: export SPARK_MAJOR_VERSION=2
4.  Q: Check the number of records for a file
    A: wc -l /Users/dbratu/Documents/big_data/data-master/retail_db/*/*
5.  Q: Show the last lines in hadoop CLI
    A: hadoop fs -tail /Users/dbratu/Documents/big_data/data-master/retail_db/orders
6.  Q: List files in hadoop CLI including subdirectories
    A: hadoop fs -ls -R
7.  Q: Get and move to hadoop fs
    A: hadoop fs -get source dest, hadoop fs -copyToLocal source dest
8.  Q: Three compression codecs?
    A: Gzip, Default, Snappy
9.  Q: Setting the hive metastore
    A: set hive.metastore.warehouse.dir
10. Q: Start pyspark with 5 configurations.
    A: pyspark --master local --conf spark.ui.port=4040 --num-executors 2 --executor-cores 2 --executor-memory 512M
11. Q: Force spark to use x threads
    A: spark.conf.set('spark.sql.shuffle.partitions', x)
12. Q: Read a file as an RDD in pyspark shell
    A: orders = sc.textFile("/Users/dbratu/Documents/big_data/data-master/retail_db/orders", numPartitions=2)
13. Q: Create an RDD from a list in pyspark
    A: sql.parallelize(my_list)
14. Q: Read 4 different formats using sqLContext
    A: sqlContext.read.text(path), sqlContext.read.json(path), sqlContext.read.orc(path), sqlContext.read.parquet(path)
15. Q: Use map function to split the records delimited
    A: orders_m = orders.map(lambda x: x.split(','))
16. Q: Use flatmap to split 3 sentences and get all the words together
    A:
lista = ['dragos bratu', 'manchester united', 'data science']
l = sc.parallelize(lista)
l_fm = l.flatMap(lambda x: x.split(' '))
17. Q: Filter the orders by CLOSED status
    A: o_f = orders.filter(lambda x: x.split(',')[-1] == "CLOSED")
18. Q: Make an inner join between orders and order_items
    A:
o_m = orders.map(lambda x: (int(x.split(',')[0]), x))
oi_m = order_items.map(lambda x: (int(x.split(',')[1]), x))
o_oi = o_m.join(oi_m)
19. Q: Which are the functions for left and right?
    A: rdd1.leftOuterJoin(rdd2), rdd1.rightOuterJoin(rdd2)
20. Q: Given a list of names, reduce all of the into a single word
    A:
l = ['dragos bratu', 'manchester united', 'data science']
l.flatMap(lambda x: x.split(' ')).reduce(lambda x, y: x + y)
21. Q: Count the orders by status
    A: for item in orders.map(lambda x: (x.split(',')[-1], x)).countByKey().items(): print(item)
23. Q: Group order items by order id
    A:
oi_m = order_items.map(lambda x: (int(x.split(',')[1]), float(x.split(',')[4]))).groupByKey()
for item in oi_m.take(10): print(item[0], list(item[1]))
22. Q: Reduce the order items to their sum
    A:
oi_m = order_items.map(lambda x: (int(x.split(',')[1]), float(x.split(',')[4])))
oi_m_g = oi_m.reduceByKey(lambda x, y: x + y)
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
22. Q:
    A:
